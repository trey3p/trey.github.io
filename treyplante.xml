<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>304</fr:anchor><fr:addr
type="user">treyplante</fr:addr><fr:route>treyplante.xml</fr:route><fr:title
text="Trey Plante">Trey Plante</fr:title><fr:taxon>Person</fr:taxon><fr:authors /><fr:meta
name="institution"><fr:link
type="external"
href="Wesleyan">Wesleyan</fr:link></fr:meta><fr:meta
name="position">CS Masters Student</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>Masters student of Dan Licata and Robert Rose at Wesleyan University</fr:p></fr:mainmatter><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Contributions">Contributions</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>305</fr:anchor><fr:addr
type="user">hott-0003</fr:addr><fr:route>hott-0003.xml</fr:route><fr:title
text="(S^{1}) = {Z} "><fr:tex
display="inline"><![CDATA[\Pi (S^{1}) = \mathbb {Z}]]></fr:tex> </fr:title><fr:taxon>Theorem</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>233</fr:anchor><fr:addr
type="user">hott-0002</fr:addr><fr:route>hott-0002.xml</fr:route><fr:title
text="Ap">Ap</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Suppose that <fr:tex
display="inline"><![CDATA[f : A \to  B]]></fr:tex> is a function. Then for any <fr:tex
display="inline"><![CDATA[x, y : A]]></fr:tex> there is an operation
    <fr:tex
display="block"><![CDATA[ap_{f} : (x =_{A} y) \to  (f(x) =_{B} f(y))]]></fr:tex>.</fr:p><fr:p>Moreover, for each <fr:tex
display="inline"><![CDATA[x : A]]></fr:tex> we have <fr:tex
display="inline"><![CDATA[ap_{f}(refl_{x}) \equiv  refl_{f(x)}]]></fr:tex></fr:p><fr:p>The notation <fr:tex
display="inline"><![CDATA[ap_{f}]]></fr:tex> can be read as the application of f to a path, or as the action
    on paths of f.</fr:p><fr:p>It suffices (by induction) to define <fr:tex
display="inline"><![CDATA[ap_{f}(refl) :\equiv  refl_{f(x)} : f(x) = f(x)]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>307</fr:anchor><fr:addr
type="user">hott-0001</fr:addr><fr:route>hott-0001.xml</fr:route><fr:title
text="Functions are functors">Functions are functors</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The claim is that functions behave "functorially" on paths. This is equivalent to saying functions
   respect equality in type theory and that functions are continuous (preserve paths) in topology.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>241</fr:anchor><fr:addr
type="user">hott-0002</fr:addr><fr:route>hott-0002.xml</fr:route><fr:title
text="Ap">Ap</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Suppose that <fr:tex
display="inline"><![CDATA[f : A \to  B]]></fr:tex> is a function. Then for any <fr:tex
display="inline"><![CDATA[x, y : A]]></fr:tex> there is an operation
    <fr:tex
display="block"><![CDATA[ap_{f} : (x =_{A} y) \to  (f(x) =_{B} f(y))]]></fr:tex>.</fr:p><fr:p>Moreover, for each <fr:tex
display="inline"><![CDATA[x : A]]></fr:tex> we have <fr:tex
display="inline"><![CDATA[ap_{f}(refl_{x}) \equiv  refl_{f(x)}]]></fr:tex></fr:p><fr:p>The notation <fr:tex
display="inline"><![CDATA[ap_{f}]]></fr:tex> can be read as the application of f to a path, or as the action
    on paths of f.</fr:p><fr:p>It suffices (by induction) to define <fr:tex
display="inline"><![CDATA[ap_{f}(refl) :\equiv  refl_{f(x)} : f(x) = f(x)]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>For functions <fr:tex
display="inline"><![CDATA[f : A \to  B]]></fr:tex> and <fr:tex
display="inline"><![CDATA[g : B \to  C]]></fr:tex> and paths <fr:tex
display="inline"><![CDATA[p : x =_{A} y]]></fr:tex> and <fr:tex
display="inline"><![CDATA[q : y =_{A} z]]></fr:tex> we have:
    <fr:ul><fr:li><fr:tex
display="inline"><![CDATA[ap_{f}(p \bullet  q) = ap_{f}(p) \bullet  ap_f(q)]]></fr:tex></fr:li>

        <fr:li><fr:tex
display="inline"><![CDATA[ap_{f}(p^{-1}) = ap_{f}(p)^{-1}]]></fr:tex></fr:li>

        <fr:li><fr:tex
display="inline"><![CDATA[ap_{g}(ap_{f}(p)) = ap_{g \circ  f}(p)]]></fr:tex></fr:li>

        <fr:li>ap_{id_{A}}(p) = p</fr:li></fr:ul></fr:p><fr:p>Notes from section 2.2 of the HoTT book</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>309</fr:anchor><fr:addr
type="user">hott-0004</fr:addr><fr:route>hott-0004.xml</fr:route><fr:title
text="Notes on Homotopy Type Theory">Notes on Homotopy Type Theory</fr:title><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>237</fr:anchor><fr:addr
type="user">hott-0003</fr:addr><fr:route>hott-0003.xml</fr:route><fr:title
text="(S^{1}) = {Z} "><fr:tex
display="inline"><![CDATA[\Pi (S^{1}) = \mathbb {Z}]]></fr:tex> </fr:title><fr:taxon>Theorem</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>233</fr:anchor><fr:addr
type="user">hott-0002</fr:addr><fr:route>hott-0002.xml</fr:route><fr:title
text="Ap">Ap</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Suppose that <fr:tex
display="inline"><![CDATA[f : A \to  B]]></fr:tex> is a function. Then for any <fr:tex
display="inline"><![CDATA[x, y : A]]></fr:tex> there is an operation
    <fr:tex
display="block"><![CDATA[ap_{f} : (x =_{A} y) \to  (f(x) =_{B} f(y))]]></fr:tex>.</fr:p><fr:p>Moreover, for each <fr:tex
display="inline"><![CDATA[x : A]]></fr:tex> we have <fr:tex
display="inline"><![CDATA[ap_{f}(refl_{x}) \equiv  refl_{f(x)}]]></fr:tex></fr:p><fr:p>The notation <fr:tex
display="inline"><![CDATA[ap_{f}]]></fr:tex> can be read as the application of f to a path, or as the action
    on paths of f.</fr:p><fr:p>It suffices (by induction) to define <fr:tex
display="inline"><![CDATA[ap_{f}(refl) :\equiv  refl_{f(x)} : f(x) = f(x)]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>311</fr:anchor><fr:addr
type="user">hott-0002</fr:addr><fr:route>hott-0002.xml</fr:route><fr:title
text="Ap">Ap</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Suppose that <fr:tex
display="inline"><![CDATA[f : A \to  B]]></fr:tex> is a function. Then for any <fr:tex
display="inline"><![CDATA[x, y : A]]></fr:tex> there is an operation
    <fr:tex
display="block"><![CDATA[ap_{f} : (x =_{A} y) \to  (f(x) =_{B} f(y))]]></fr:tex>.</fr:p><fr:p>Moreover, for each <fr:tex
display="inline"><![CDATA[x : A]]></fr:tex> we have <fr:tex
display="inline"><![CDATA[ap_{f}(refl_{x}) \equiv  refl_{f(x)}]]></fr:tex></fr:p><fr:p>The notation <fr:tex
display="inline"><![CDATA[ap_{f}]]></fr:tex> can be read as the application of f to a path, or as the action
    on paths of f.</fr:p><fr:p>It suffices (by induction) to define <fr:tex
display="inline"><![CDATA[ap_{f}(refl) :\equiv  refl_{f(x)} : f(x) = f(x)]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>313</fr:anchor><fr:addr
type="user">mlg-0001</fr:addr><fr:route>mlg-0001.xml</fr:route><fr:title
text="Notes on Mathematical Logic">Notes on Mathematical Logic</fr:title><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>3</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>These are notes from a Mathematical Logic class taught by
    Alexander Van Abel at Wesleyan University. Any mistakes in the
    following material are my own.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>254</fr:anchor><fr:addr
type="user">mlg-0002</fr:addr><fr:route>mlg-0002.xml</fr:route><fr:title
text="First-order Language">First-order Language</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>3</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>A first-order language <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex> is an infinite collection of distinct symbols,
where no symbol is contained in another, in the following categories:

The following are logical symbols that belong to every language:
<fr:ul><fr:li>"(", ")"</fr:li>

    <fr:li>"<fr:tex
display="inline"><![CDATA[\lor ]]></fr:tex>", "<fr:tex
display="inline"><![CDATA[\lnot ]]></fr:tex>"</fr:li>

    <fr:li>"<fr:tex
display="inline"><![CDATA[\forall ]]></fr:tex>"</fr:li>

    <fr:li>"<fr:tex
display="inline"><![CDATA[v_1]]></fr:tex>," "v_{2}", ... (an infinite sequence of variables). The set of variables is denoted
        <fr:tex
display="inline"><![CDATA[Vars]]></fr:tex>.</fr:li>

    <fr:li>"<fr:tex
display="inline"><![CDATA[=]]></fr:tex>"</fr:li></fr:ul>


The following are non-logical symbols that a language is not required to contain
<fr:ul><fr:li>Constant symbols.</fr:li>

    <fr:li>For every <fr:tex
display="inline"><![CDATA[n]]></fr:tex>, <fr:tex
display="inline"><![CDATA[n]]></fr:tex>-ary function symbols.</fr:li>

    <fr:li>For every <fr:tex
display="inline"><![CDATA[n]]></fr:tex>, <fr:tex
display="inline"><![CDATA[n]]></fr:tex>-ary relation symbols.</fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>255</fr:anchor><fr:addr
type="user">mlg-0003</fr:addr><fr:route>mlg-0003.xml</fr:route><fr:title
text="Term of a Language">Term of a Language</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>3</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>If <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex> is a language a <fr:em>term of <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex></fr:em> is a nonempty finite string <fr:tex
display="inline"><![CDATA[t]]></fr:tex> of symbols
from <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex> such that either:
<fr:ul><fr:li><fr:tex
display="inline"><![CDATA[t]]></fr:tex> is a constant symbol</fr:li>

    <fr:li><fr:tex
display="inline"><![CDATA[t]]></fr:tex> is a variable</fr:li>

    <fr:li><fr:tex
display="inline"><![CDATA[t \coloneq  f t_{1} t_{2} \cdots  t_{n}]]></fr:tex>, , where <fr:tex
display="inline"><![CDATA[f]]></fr:tex> is an <fr:tex
display="inline"><![CDATA[n]]></fr:tex>-ary function symbol of
        <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex> and each of the <fr:tex
display="inline"><![CDATA[t_i]]></fr:tex> is a term of <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex></fr:li></fr:ul>

<fr:p>The symbol <fr:tex
display="inline"><![CDATA[\coloneq ]]></fr:tex> is not a part of <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex>, but a meta-linguistic symbol that means
    the strings of <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex>-symbols on each side of the <fr:tex
display="inline"><![CDATA[\coloneq ]]></fr:tex> are identical.</fr:p></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>315</fr:anchor><fr:addr
type="user">mlg-0003</fr:addr><fr:route>mlg-0003.xml</fr:route><fr:title
text="Term of a Language">Term of a Language</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>3</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>If <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex> is a language a <fr:em>term of <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex></fr:em> is a nonempty finite string <fr:tex
display="inline"><![CDATA[t]]></fr:tex> of symbols
from <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex> such that either:
<fr:ul><fr:li><fr:tex
display="inline"><![CDATA[t]]></fr:tex> is a constant symbol</fr:li>

    <fr:li><fr:tex
display="inline"><![CDATA[t]]></fr:tex> is a variable</fr:li>

    <fr:li><fr:tex
display="inline"><![CDATA[t \coloneq  f t_{1} t_{2} \cdots  t_{n}]]></fr:tex>, , where <fr:tex
display="inline"><![CDATA[f]]></fr:tex> is an <fr:tex
display="inline"><![CDATA[n]]></fr:tex>-ary function symbol of
        <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex> and each of the <fr:tex
display="inline"><![CDATA[t_i]]></fr:tex> is a term of <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex></fr:li></fr:ul>

<fr:p>The symbol <fr:tex
display="inline"><![CDATA[\coloneq ]]></fr:tex> is not a part of <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex>, but a meta-linguistic symbol that means
    the strings of <fr:tex
display="inline"><![CDATA[\mathcal {L}]]></fr:tex>-symbols on each side of the <fr:tex
display="inline"><![CDATA[\coloneq ]]></fr:tex> are identical.</fr:p></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>317</fr:anchor><fr:addr
type="user">dtt-0001</fr:addr><fr:route>dtt-0001.xml</fr:route><fr:title
text="Truncation Levels in Type Theory">Truncation Levels in Type Theory</fr:title><fr:date><fr:year>2024</fr:year><fr:month>9</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p /></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>319</fr:anchor><fr:addr
type="user">ctt-0003</fr:addr><fr:route>ctt-0003.xml</fr:route><fr:title
text="Boundary Types">Boundary Types</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A <fr:em>boundary type</fr:em> is a type that describes the witness of a partial element being ``extensible''.
  Given a partial element <fr:tex
display="inline"><![CDATA[u : [\alpha ] \to  A]]></fr:tex>, the boundary type <fr:tex
display="inline"><![CDATA[A[\alpha  \to  u]]]></fr:tex> is the type of elements <fr:tex
display="inline"><![CDATA[a : A]]></fr:tex> that ``extend'' <fr:tex
display="inline"><![CDATA[u]]></fr:tex>. A term <fr:tex
display="inline"><![CDATA[a : A[\alpha  \to  u]]]></fr:tex> is a proof that <fr:tex
display="inline"><![CDATA[a : A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[u : A]]></fr:tex> agree on <fr:tex
display="inline"><![CDATA[\alpha ]]></fr:tex>.
  Any term <fr:tex
display="inline"><![CDATA[u : A]]></fr:tex> is a term of <fr:tex
display="inline"><![CDATA[A[\alpha  \to  u]]]></fr:tex> because <fr:tex
display="inline"><![CDATA[u]]></fr:tex> is equivalent with itself. Thus, the boundary type internalizes two judgments: <fr:tex
display="inline"><![CDATA[\Gamma  \vdash  a : A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\Gamma , \alpha  \vdash  a \equiv  u : A]]></fr:tex>.
  Boundary types can be thought of as a <fr:tex
display="inline"><![CDATA[\Sigma ]]></fr:tex>-type: <fr:tex
display="inline"><![CDATA[\Sigma  (a : A) ([\phi ] \to  A \equiv  u)]]></fr:tex>.</fr:p><fr:p>Generally, boundary types can describe


TODO: Expand to bound types with multiple map</fr:p><fr:p>TODO: explain why <fr:tex
display="inline"><![CDATA[u : A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[u : \alpha  \to  A]]></fr:tex> shifting type
  TODO: write typing rules (inference)

  The typing rules for boundary types are as follows:</fr:p><fr:embedded-tex
hash="2a5ba6a867bea5a3bff5105cc0f14a8a"><fr:embedded-tex-preamble><![CDATA[\usepackage {ebproof}
     \usepackage {mathtools}
    ]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
        \begin {prooftree}
            \hypo {\Gamma  \vdash  A : Type_l} \hypo {\Gamma  \vdash  \psi  cof} \hypo {\Gamma  \vdash  t : [\psi ] \to  A}
            \infer 3[form]{\Gamma  \vdash  A[\psi  \to  t]}
        \end {prooftree}
        \quad 
         \begin {prooftree}
            \hypo {\Gamma  \vdash  a : A}
            \hypo {\Gamma  \vdash  \psi  cof}
            \infer 2[intro]{\Gamma  \vdash  in(a) : A[\psi  \to  a]}
        \end {prooftree}
        \newline 

]]></fr:embedded-tex-body></fr:embedded-tex><fr:p /><fr:embedded-tex
hash="49b99d7fda10cb29f37d2f5ed18ab83d"><fr:embedded-tex-preamble><![CDATA[\usepackage {ebproof}
     \usepackage {mathtools}
    ]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
    \begin {prooftree}
            \hypo {\Gamma  \vdash  a : A[\psi  \to  t]}
            \infer 1[elim]{\Gamma  \vdash  out(a) : A}
        \end {prooftree}
        \quad 
        \begin {prooftree}
             \hypo {\Gamma  \vdash  a : A[\psi  \to  t]}
             \hypo {\Gamma  \vdash  \psi }
            \infer 2[comp]{\Gamma  \vdash  out(a) \equiv  t}
        \end {prooftree}
]]></fr:embedded-tex-body></fr:embedded-tex></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>321</fr:anchor><fr:addr
type="user">ctt-0002</fr:addr><fr:route>ctt-0002.xml</fr:route><fr:title
text="Cubical Type Theory">Cubical Type Theory</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Cubical type theory is a constructive approach to homotopy type theory..</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>248</fr:anchor><fr:addr
type="user">ctt-0001</fr:addr><fr:route>ctt-0001.xml</fr:route><fr:title
text="Partial Elements">Partial Elements</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Partial elements are elements of a type that are defined on the extent of a cofibration formula. Partial elements are used in cubical type theory
to describe partially specified n-dimensional cubes.</fr:p><fr:p>I use the notation <fr:tex
display="inline"><![CDATA[ [\alpha ] \rightarrow  A ]]></fr:tex> for the type
of partial elements of A defined on <fr:tex
display="inline"><![CDATA[ \alpha  ]]></fr:tex>.  Partial elements internalize the structure of the judgement <fr:tex
display="inline"><![CDATA[ \alpha  \vdash  a : A]]></fr:tex>.</fr:p><fr:p>The typing rules for partial elements are as follows:</fr:p><fr:embedded-tex
hash="299c9367e49e20481b2e0c919beb92e0"><fr:embedded-tex-preamble><![CDATA[
    \usepackage {ebproof}
    \usepackage {mathtools}
]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
    \begin {prooftree}
        \hypo {\Gamma  \vdash  A : Type_{l}}
        \infer 1[form]{\Gamma  \vdash  [\alpha ] \to  A}
    \end {prooftree}
    \quad 
    \begin {prooftree}
        \hypo {\Gamma  ,\alpha  \vdash  a : A}
        \infer 1[intro]{\Gamma  \vdash  in(f) : [\alpha ] \to  A}
    \end {prooftree}
]]></fr:embedded-tex-body></fr:embedded-tex><fr:p /><fr:embedded-tex
hash="37f1a1dbfad577e56e4dfd8862596225"><fr:embedded-tex-preamble><![CDATA[
    \usepackage {ebproof}
    \usepackage {mathtools}
]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
    \begin {prooftree}
        \hypo {\Gamma  \vdash  f : [\alpha ] \to  A}
        \infer 1[elim]{\Gamma  \vdash  out(f) : A}
    \end {prooftree}
    \quad 
    \begin {prooftree}
        \hypo {\Gamma  \vdash  f : [\alpha ] \to  A}
        \infer 1[comp]{\Gamma  \vdash  out(f) \equiv  a}
    \end {prooftree}
]]></fr:embedded-tex-body></fr:embedded-tex></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>250</fr:anchor><fr:addr
type="user">ctt-0003</fr:addr><fr:route>ctt-0003.xml</fr:route><fr:title
text="Boundary Types">Boundary Types</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A <fr:em>boundary type</fr:em> is a type that describes the witness of a partial element being ``extensible''.
  Given a partial element <fr:tex
display="inline"><![CDATA[u : [\alpha ] \to  A]]></fr:tex>, the boundary type <fr:tex
display="inline"><![CDATA[A[\alpha  \to  u]]]></fr:tex> is the type of elements <fr:tex
display="inline"><![CDATA[a : A]]></fr:tex> that ``extend'' <fr:tex
display="inline"><![CDATA[u]]></fr:tex>. A term <fr:tex
display="inline"><![CDATA[a : A[\alpha  \to  u]]]></fr:tex> is a proof that <fr:tex
display="inline"><![CDATA[a : A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[u : A]]></fr:tex> agree on <fr:tex
display="inline"><![CDATA[\alpha ]]></fr:tex>.
  Any term <fr:tex
display="inline"><![CDATA[u : A]]></fr:tex> is a term of <fr:tex
display="inline"><![CDATA[A[\alpha  \to  u]]]></fr:tex> because <fr:tex
display="inline"><![CDATA[u]]></fr:tex> is equivalent with itself. Thus, the boundary type internalizes two judgments: <fr:tex
display="inline"><![CDATA[\Gamma  \vdash  a : A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\Gamma , \alpha  \vdash  a \equiv  u : A]]></fr:tex>.
  Boundary types can be thought of as a <fr:tex
display="inline"><![CDATA[\Sigma ]]></fr:tex>-type: <fr:tex
display="inline"><![CDATA[\Sigma  (a : A) ([\phi ] \to  A \equiv  u)]]></fr:tex>.</fr:p><fr:p>Generally, boundary types can describe


TODO: Expand to bound types with multiple map</fr:p><fr:p>TODO: explain why <fr:tex
display="inline"><![CDATA[u : A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[u : \alpha  \to  A]]></fr:tex> shifting type
  TODO: write typing rules (inference)

  The typing rules for boundary types are as follows:</fr:p><fr:embedded-tex
hash="2a5ba6a867bea5a3bff5105cc0f14a8a"><fr:embedded-tex-preamble><![CDATA[\usepackage {ebproof}
     \usepackage {mathtools}
    ]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
        \begin {prooftree}
            \hypo {\Gamma  \vdash  A : Type_l} \hypo {\Gamma  \vdash  \psi  cof} \hypo {\Gamma  \vdash  t : [\psi ] \to  A}
            \infer 3[form]{\Gamma  \vdash  A[\psi  \to  t]}
        \end {prooftree}
        \quad 
         \begin {prooftree}
            \hypo {\Gamma  \vdash  a : A}
            \hypo {\Gamma  \vdash  \psi  cof}
            \infer 2[intro]{\Gamma  \vdash  in(a) : A[\psi  \to  a]}
        \end {prooftree}
        \newline 

]]></fr:embedded-tex-body></fr:embedded-tex><fr:p /><fr:embedded-tex
hash="49b99d7fda10cb29f37d2f5ed18ab83d"><fr:embedded-tex-preamble><![CDATA[\usepackage {ebproof}
     \usepackage {mathtools}
    ]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
    \begin {prooftree}
            \hypo {\Gamma  \vdash  a : A[\psi  \to  t]}
            \infer 1[elim]{\Gamma  \vdash  out(a) : A}
        \end {prooftree}
        \quad 
        \begin {prooftree}
             \hypo {\Gamma  \vdash  a : A[\psi  \to  t]}
             \hypo {\Gamma  \vdash  \psi }
            \infer 2[comp]{\Gamma  \vdash  out(a) \equiv  t}
        \end {prooftree}
]]></fr:embedded-tex-body></fr:embedded-tex></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>323</fr:anchor><fr:addr
type="user">egp-0005</fr:addr><fr:route>egp-0005.xml</fr:route><fr:title
text="Cubical Type Theory">Cubical Type Theory</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Cubical type theory is a constructive approach to homotopy type theory..</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>287</fr:anchor><fr:addr
type="user">ctt-0001</fr:addr><fr:route>ctt-0001.xml</fr:route><fr:title
text="Partial Elements">Partial Elements</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Partial elements are elements of a type that are defined on the extent of a cofibration formula. Partial elements are used in cubical type theory
to describe partially specified n-dimensional cubes.</fr:p><fr:p>I use the notation <fr:tex
display="inline"><![CDATA[ [\alpha ] \rightarrow  A ]]></fr:tex> for the type
of partial elements of A defined on <fr:tex
display="inline"><![CDATA[ \alpha  ]]></fr:tex>.  Partial elements internalize the structure of the judgement <fr:tex
display="inline"><![CDATA[ \alpha  \vdash  a : A]]></fr:tex>.</fr:p><fr:p>The typing rules for partial elements are as follows:</fr:p><fr:embedded-tex
hash="299c9367e49e20481b2e0c919beb92e0"><fr:embedded-tex-preamble><![CDATA[
    \usepackage {ebproof}
    \usepackage {mathtools}
]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
    \begin {prooftree}
        \hypo {\Gamma  \vdash  A : Type_{l}}
        \infer 1[form]{\Gamma  \vdash  [\alpha ] \to  A}
    \end {prooftree}
    \quad 
    \begin {prooftree}
        \hypo {\Gamma  ,\alpha  \vdash  a : A}
        \infer 1[intro]{\Gamma  \vdash  in(f) : [\alpha ] \to  A}
    \end {prooftree}
]]></fr:embedded-tex-body></fr:embedded-tex><fr:p /><fr:embedded-tex
hash="37f1a1dbfad577e56e4dfd8862596225"><fr:embedded-tex-preamble><![CDATA[
    \usepackage {ebproof}
    \usepackage {mathtools}
]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
    \begin {prooftree}
        \hypo {\Gamma  \vdash  f : [\alpha ] \to  A}
        \infer 1[elim]{\Gamma  \vdash  out(f) : A}
    \end {prooftree}
    \quad 
    \begin {prooftree}
        \hypo {\Gamma  \vdash  f : [\alpha ] \to  A}
        \infer 1[comp]{\Gamma  \vdash  out(f) \equiv  a}
    \end {prooftree}
]]></fr:embedded-tex-body></fr:embedded-tex></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>325</fr:anchor><fr:addr
type="user">ctt-0001</fr:addr><fr:route>ctt-0001.xml</fr:route><fr:title
text="Partial Elements">Partial Elements</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Partial elements are elements of a type that are defined on the extent of a cofibration formula. Partial elements are used in cubical type theory
to describe partially specified n-dimensional cubes.</fr:p><fr:p>I use the notation <fr:tex
display="inline"><![CDATA[ [\alpha ] \rightarrow  A ]]></fr:tex> for the type
of partial elements of A defined on <fr:tex
display="inline"><![CDATA[ \alpha  ]]></fr:tex>.  Partial elements internalize the structure of the judgement <fr:tex
display="inline"><![CDATA[ \alpha  \vdash  a : A]]></fr:tex>.</fr:p><fr:p>The typing rules for partial elements are as follows:</fr:p><fr:embedded-tex
hash="299c9367e49e20481b2e0c919beb92e0"><fr:embedded-tex-preamble><![CDATA[
    \usepackage {ebproof}
    \usepackage {mathtools}
]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
    \begin {prooftree}
        \hypo {\Gamma  \vdash  A : Type_{l}}
        \infer 1[form]{\Gamma  \vdash  [\alpha ] \to  A}
    \end {prooftree}
    \quad 
    \begin {prooftree}
        \hypo {\Gamma  ,\alpha  \vdash  a : A}
        \infer 1[intro]{\Gamma  \vdash  in(f) : [\alpha ] \to  A}
    \end {prooftree}
]]></fr:embedded-tex-body></fr:embedded-tex><fr:p /><fr:embedded-tex
hash="37f1a1dbfad577e56e4dfd8862596225"><fr:embedded-tex-preamble><![CDATA[
    \usepackage {ebproof}
    \usepackage {mathtools}
]]></fr:embedded-tex-preamble><fr:embedded-tex-body><![CDATA[
    \begin {prooftree}
        \hypo {\Gamma  \vdash  f : [\alpha ] \to  A}
        \infer 1[elim]{\Gamma  \vdash  out(f) : A}
    \end {prooftree}
    \quad 
    \begin {prooftree}
        \hypo {\Gamma  \vdash  f : [\alpha ] \to  A}
        \infer 1[comp]{\Gamma  \vdash  out(f) \equiv  a}
    \end {prooftree}
]]></fr:embedded-tex-body></fr:embedded-tex></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>327</fr:anchor><fr:addr
type="user">egp-0001</fr:addr><fr:route>egp-0001.xml</fr:route><fr:title
text="My first tree">My first tree</fr:title><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>22</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="treyplante.xml"
addr="treyplante"
title="Trey Plante">Trey Plante</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>HI</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>